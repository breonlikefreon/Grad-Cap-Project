#include <RGBmatrixPanel.h>


#include <Adafruit_GFX.h>
#include <Adafruit_NeoMatrix.h>
#include <Adafruit_NeoPixel.h>
#ifndef PSTR
#define PSTR // Make Arduino Due happy
#endif

#define CLK 11 // USE THIS ON ARDUINO MEGA
#define OE   9
#define LAT 10
#define A   A0
#define B   A1
#define C   A2
#define D   A3

RGBmatrixPanel matrix(A, B, C, D, CLK, LAT, OE, false);

const unsigned short elogo[1024] PROGMEM = {
  0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF,   // 0x0010 (16) pixels
  0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF,   // 0x0020 (32) pixels
  0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF,   // 0x0030 (48) pixels
  0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF,   // 0x0040 (64) pixels
  0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF,   // 0x0050 (80) pixels
  0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF,   // 0x0060 (96) pixels
  0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF,   // 0x0070 (112) pixels
  0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF,   // 0x0080 (128) pixels
  0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF,   // 0x0090 (144) pixels
  0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF,   // 0x00A0 (160) pixels
  0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFDF, 0xFFFF, 0xFE38, 0xFA49, 0xF882, 0xF840,   // 0x00B0 (176) pixels
  0xF861, 0xF924, 0xFBCE, 0xFF9E, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFDF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF,   // 0x00C0 (192) pixels
  0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFC51, 0xF840, 0xF840, 0xF860, 0xF860, 0xF860, 0xF860,   // 0x00D0 (208) pixels
  0xF860, 0xF860, 0xF860, 0xF860, 0xF840, 0xFA28, 0xFFBE, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF,   // 0x00E0 (224) pixels
  0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFDF, 0xFFDF, 0xFEBA, 0xF8E2, 0xF880, 0xF860, 0xF860, 0xF860, 0xF860, 0xF860, 0xF860,   // 0x00F0 (240) pixels
  0xF860, 0xF860, 0xF860, 0xF860, 0xF860, 0xF860, 0xF860, 0xF9E7, 0xFF9E, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF,   // 0x0100 (256) pixels
  0xFFFF, 0xFFFF, 0xFFFF, 0xFFDF, 0xFFDF, 0xFFDF, 0xF924, 0xF860, 0xF860, 0xF860, 0xF860, 0xF860, 0xF860, 0xF860, 0xF880, 0xF860,   // 0x0110 (272) pixels
  0xF860, 0xF840, 0xF860, 0xF860, 0xF860, 0xF860, 0xF860, 0xF860, 0xF903, 0xFDD6, 0xFFDF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF,   // 0x0120 (288) pixels
  0xFFFF, 0xFFFF, 0xFFFF, 0xFFDF, 0xFFDF, 0xF861, 0xF860, 0xF860, 0xF860, 0xF860, 0xF860, 0xF860, 0xF860, 0xF860, 0xF840, 0xFACB,   // 0x0130 (304) pixels
  0xFA6A, 0xF840, 0xF860, 0xF860, 0xF860, 0xF860, 0xF860, 0xF860, 0xF860, 0xF840, 0xFF3C, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF,   // 0x0140 (320) pixels
  0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFB8E, 0xF860, 0xF860, 0xF860, 0xF860, 0xF860, 0xF860, 0xF860, 0xF860, 0xF8E2, 0xFFFF, 0xFFFF,   // 0x0150 (336) pixels
  0xFFFF, 0xFFDF, 0xF8A2, 0xF840, 0xF860, 0xF860, 0xF860, 0xF860, 0xF860, 0xF880, 0xF840, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF,   // 0x0160 (352) pixels
  0xFFFF, 0xFFFF, 0xFFFF, 0xFFDF, 0xF860, 0xF860, 0xF860, 0xF860, 0xF860, 0xF860, 0xF860, 0xF860, 0xF880, 0xFCF3, 0xFFFF, 0xFFFF,   // 0x0170 (368) pixels
  0xFFFF, 0xFFDF, 0xFD13, 0xF860, 0xF860, 0xF860, 0xF860, 0xF860, 0xF860, 0xF840, 0xF860, 0xFD55, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF,   // 0x0180 (384) pixels
  0xFFFF, 0xFFFF, 0xFFFF, 0xFB8D, 0xF860, 0xF860, 0xF860, 0xF860, 0xF860, 0xF860, 0xF860, 0xF860, 0xF860, 0xFD34, 0xFFFF, 0xFFFF,   // 0x0190 (400) pixels
  0xFFFF, 0xFFFF, 0xFD55, 0xF840, 0xF860, 0xF860, 0xF860, 0xF860, 0xF860, 0xF860, 0xF860, 0xF820, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF,   // 0x01A0 (416) pixels
  0xFFFF, 0xFFFF, 0xFFFF, 0xF820, 0xF860, 0xF860, 0xF860, 0xF860, 0xF860, 0xF860, 0xF860, 0xF860, 0xF860, 0xFDB6, 0xFF7D, 0xFF7D,   // 0x01B0 (432) pixels
  0xFF7D, 0xFF7D, 0xFD75, 0xF860, 0xF860, 0xF860, 0xF860, 0xF860, 0xF860, 0xF860, 0xF860, 0xF860, 0xFEBA, 0xFFFF, 0xFFFF, 0xFFFF,   // 0x01C0 (448) pixels
  0xFFFF, 0xFFFF, 0xFFFF, 0xF860, 0xF860, 0xF860, 0xF860, 0xF860, 0xF860, 0xF860, 0xF860, 0xF860, 0xF860, 0xF860, 0xF860, 0xF860,   // 0x01D0 (464) pixels
  0xF860, 0xF860, 0xF860, 0xF840, 0xF860, 0xF860, 0xF860, 0xF860, 0xF860, 0xF860, 0xF860, 0xF840, 0xFACB, 0xFFFF, 0xFFFF, 0xFFFF,   // 0x01E0 (480) pixels
  0xFFFF, 0xFFFF, 0xFFFF, 0xF860, 0xF860, 0xF860, 0xF860, 0xF860, 0xF860, 0xF860, 0xF860, 0xF860, 0xF860, 0xF860, 0xF860, 0xF860,   // 0x01F0 (496) pixels
  0xF860, 0xF860, 0xF860, 0xF860, 0xF860, 0xF860, 0xF860, 0xF860, 0xF860, 0xF860, 0xF860, 0xF860, 0xF945, 0xFFFF, 0xFFFF, 0xFFFF,   // 0x0200 (512) pixels
  0xFFFF, 0xFFFF, 0xFFFF, 0xF860, 0xF860, 0xF860, 0xF860, 0xF860, 0xF860, 0xF860, 0xF860, 0xF860, 0xF860, 0xF882, 0xF882, 0xF882,   // 0x0210 (528) pixels
  0xF882, 0xF882, 0xF882, 0xF882, 0xF882, 0xF882, 0xF882, 0xF882, 0xF882, 0xF882, 0xF882, 0xF882, 0xF8A2, 0xFFFF, 0xFFFF, 0xFFFF,   // 0x0220 (544) pixels
  0xFFFF, 0xFFFF, 0xFFFF, 0xF860, 0xF860, 0xF860, 0xF860, 0xF860, 0xF860, 0xF860, 0xF860, 0xF860, 0xF860, 0xFEBA, 0xFFFF, 0xFFFF,   // 0x0230 (560) pixels
  0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF,   // 0x0240 (576) pixels
  0xFFFF, 0xFFFF, 0xFFFF, 0xF8C2, 0xF860, 0xF860, 0xF860, 0xF860, 0xF860, 0xF860, 0xF860, 0xF860, 0xF860, 0xFD96, 0xFFFF, 0xFFFF,   // 0x0250 (592) pixels
  0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF,   // 0x0260 (608) pixels
  0xFFFF, 0xFFFF, 0xFFFF, 0xFF9E, 0xF860, 0xF860, 0xF860, 0xF860, 0xF860, 0xF860, 0xF860, 0xF860, 0xF860, 0xFCB2, 0xFFFF, 0xFFFF,   // 0x0270 (624) pixels
  0xFFFF, 0xFFFF, 0xFFFF, 0xF860, 0xF840, 0xF820, 0xF820, 0xF945, 0xFC71, 0xFE79, 0xFFDE, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF,   // 0x0280 (640) pixels
  0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xF924, 0xF840, 0xF860, 0xF860, 0xF860, 0xF860, 0xF860, 0xF860, 0xF860, 0xF840, 0xFF9E, 0xFFFF,   // 0x0290 (656) pixels
  0xFFFF, 0xFFFF, 0xFCF3, 0xF840, 0xF860, 0xF860, 0xF860, 0xF860, 0xF860, 0xF860, 0xF860, 0xF840, 0xFFDF, 0xFFFF, 0xFFFF, 0xFFFF,   // 0x02A0 (672) pixels
  0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xF820, 0xF840, 0xF860, 0xF860, 0xF860, 0xF860, 0xF860, 0xF860, 0xF860, 0xF840, 0xF841,   // 0x02B0 (688) pixels
  0xF9C7, 0xF8C2, 0xF840, 0xF880, 0xF860, 0xF860, 0xF860, 0xF860, 0xF860, 0xF860, 0xF860, 0xFD96, 0xFFDF, 0xFFFF, 0xFFFF, 0xFFFF,   // 0x02C0 (704) pixels
  0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFBE, 0xF840, 0xF840, 0xF860, 0xF860, 0xF860, 0xF860, 0xF860, 0xF860, 0xF860, 0xF860,   // 0x02D0 (720) pixels
  0xF860, 0xF860, 0xF860, 0xF860, 0xF860, 0xF860, 0xF860, 0xF860, 0xF860, 0xF840, 0xFA69, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF,   // 0x02E0 (736) pixels
  0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFDF, 0xFFFF, 0xF924, 0xF860, 0xF860, 0xF860, 0xF860, 0xF860, 0xF860, 0xF860, 0xF860,   // 0x02F0 (752) pixels
  0xF860, 0xF860, 0xF860, 0xF860, 0xF860, 0xF860, 0xF860, 0xF860, 0xF903, 0xFC30, 0xFFDF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF,   // 0x0300 (768) pixels
  0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFDF, 0xFEFC, 0xFC71, 0xF861, 0xF840, 0xF860, 0xF860, 0xF860, 0xF860,   // 0x0310 (784) pixels
  0xF860, 0xF860, 0xF860, 0xF860, 0xF860, 0xF820, 0xF861, 0xFD75, 0xFFBE, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF,   // 0x0320 (800) pixels
  0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFF5D, 0xFBCE, 0xF986, 0xF8A2,   // 0x0330 (816) pixels
  0xF840, 0xF860, 0xF924, 0xFBEF, 0xFE9A, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF,   // 0x0340 (832) pixels
  0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF,   // 0x0350 (848) pixels
  0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF,   // 0x0360 (864) pixels
  0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF,   // 0x0370 (880) pixels
  0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF,   // 0x0380 (896) pixels
  0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF,   // 0x0390 (912) pixels
  0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF,   // 0x03A0 (928) pixels
  0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF,   // 0x03B0 (944) pixels
  0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF,   // 0x03C0 (960) pixels
  0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF,   // 0x03D0 (976) pixels
  0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF,   // 0x03E0 (992) pixels
  0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF,   // 0x03F0 (1008) pixels
  0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF,   // 0x0400 (1024) pixels
};


const unsigned short blm[1024] PROGMEM = {
0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,   // 0x0010 (16) pixels
0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,   // 0x0020 (32) pixels
0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,   // 0x0030 (48) pixels
0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,   // 0x0040 (64) pixels
0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,   // 0x0050 (80) pixels
0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,   // 0x0060 (96) pixels
0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xFFFF, 0xC618,   // 0x0070 (112) pixels
0xFFFF, 0x31A6, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,   // 0x0080 (128) pixels
0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xFFFF, 0xB5B6, 0x0000,   // 0x0090 (144) pixels
0x0000, 0xFFFF, 0xAD55, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,   // 0x00A0 (160) pixels
0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xBDF7, 0xFFFF, 0x0000, 0x0000,   // 0x00B0 (176) pixels
0x0000, 0x2965, 0x4208, 0xFFFF, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,   // 0x00C0 (192) pixels
0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x4208, 0xFFFF, 0x0000, 0x0000, 0x0000,   // 0x00D0 (208) pixels
0x0000, 0x9CF3, 0x0000, 0x4208, 0xFFFF, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,   // 0x00E0 (224) pixels
0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xFFFF, 0x0000, 0xFFFF, 0x0861, 0x0000,   // 0x00F0 (240) pixels
0xFFFF, 0x0000, 0x0000, 0x0000, 0xBDF7, 0xFFFF, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,   // 0x0100 (256) pixels
0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xFFFF, 0x0861, 0x0000, 0x0000, 0x0000, 0x9CD3,   // 0x0110 (272) pixels
0xEF7D, 0x0000, 0x0000, 0x0000, 0xF79E, 0x8410, 0xFFFF, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,   // 0x0120 (288) pixels
0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x738E, 0xFFFF, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,   // 0x0130 (304) pixels
0x0000, 0x8430, 0x0000, 0x6B4D, 0x0000, 0x0000, 0x4A49, 0xFFFF, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,   // 0x0140 (320) pixels
0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xFFFF, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,   // 0x0150 (336) pixels
0x0000, 0x0000, 0x0000, 0x0841, 0x0000, 0x0000, 0x0000, 0xFFFF, 0xFFFF, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,   // 0x0160 (352) pixels
0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xFFFF, 0x0000, 0x0000, 0x0000, 0x0000, 0xFFDF, 0x4208, 0x3186,   // 0x0170 (368) pixels
0x4208, 0xEF5D, 0xC618, 0x0000, 0x0000, 0x0000, 0xD6BA, 0x0000, 0xBDF7, 0xFFFF, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,   // 0x0180 (384) pixels
0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x9492, 0x9CD3, 0x0000, 0x0000, 0x0000, 0x2965, 0xFFFF, 0xBDF7, 0x0000,   // 0x0190 (400) pixels
0x0000, 0xFFFF, 0x0000, 0x0000, 0x0000, 0xE73C, 0x0000, 0x0000, 0x0000, 0xFFFF, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,   // 0x01A0 (416) pixels
0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xFFFF, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xFFFF,   // 0x01B0 (432) pixels
0x6B4D, 0xFFFF, 0x0000, 0x0000, 0xFFFF, 0x0000, 0x0000, 0x0000, 0xFFFF, 0xFFFF, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,   // 0x01C0 (448) pixels
0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xFFFF, 0xBDF7, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0841,   // 0x01D0 (464) pixels
0x0000, 0x0000, 0x0000, 0xFFFF, 0x0000, 0x0000, 0x0000, 0xFFFF, 0xFFFF, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,   // 0x01E0 (480) pixels
0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xFFFF, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,   // 0x01F0 (496) pixels
0xFFFF, 0x0000, 0x0000, 0x0000, 0xFFDF, 0x0000, 0x73AE, 0x0000, 0xFFFF, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,   // 0x0200 (512) pixels
0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xFFFF, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,   // 0x0210 (528) pixels
0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xFFFF, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,   // 0x0220 (544) pixels
0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xFFFF, 0xAD75, 0x0000, 0x0000, 0x0000, 0x0000,   // 0x0230 (560) pixels
0x0000, 0xFFFF, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x7BEF, 0xC638, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,   // 0x0240 (576) pixels
0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xFFFF, 0x0000, 0x0000, 0x0000, 0x0000,   // 0x0250 (592) pixels
0x0000, 0x0000, 0xE71C, 0x0000, 0x0000, 0x0000, 0x0000, 0xFFFF, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,   // 0x0260 (608) pixels
0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x3186, 0xFFFF, 0x0000, 0x0000, 0x0000,   // 0x0270 (624) pixels
0x0000, 0x0000, 0xFFFF, 0x0000, 0x0000, 0x0000, 0x0000, 0xFFFF, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,   // 0x0280 (640) pixels
0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xE71C, 0x0000, 0x0000, 0x0000,   // 0x0290 (656) pixels
0x0000, 0x4228, 0x0000, 0x0000, 0x0000, 0x0000, 0xFFFF, 0x0841, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,   // 0x02A0 (672) pixels
0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xFFDF, 0x0000, 0x0000, 0x0000,   // 0x02B0 (688) pixels
0x0000, 0x1082, 0x0000, 0x0000, 0x0000, 0xFFFF, 0x4A69, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,   // 0x02C0 (704) pixels
0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xFFFF, 0x0000, 0x0000, 0x0000,   // 0x02D0 (720) pixels
0x0000, 0x5ACB, 0x0000, 0x0000, 0x0000, 0xFFFF, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,   // 0x02E0 (736) pixels
0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xFFFF, 0x0000, 0x0000, 0x0000,   // 0x02F0 (752) pixels
0x0000, 0xE73C, 0x0000, 0x0000, 0x0000, 0xFFFF, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,   // 0x0300 (768) pixels
0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xFFFF, 0x0000, 0x0000, 0x0000,   // 0x0310 (784) pixels
0x0000, 0xFFFF, 0x0000, 0x0000, 0x0000, 0xFFFF, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,   // 0x0320 (800) pixels
0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xFFFF, 0x0000, 0x0000, 0x0000,   // 0x0330 (816) pixels
0x0000, 0xFFFF, 0x0000, 0x0000, 0x0000, 0xFFFF, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,   // 0x0340 (832) pixels
0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xB5B6, 0x0000, 0x0000, 0x0000,   // 0x0350 (848) pixels
0x0000, 0xFFFF, 0x0000, 0x0000, 0x0000, 0xFFFF, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,   // 0x0360 (864) pixels
0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x18E3, 0x8430, 0x39E7, 0x31A6, 0x31A6,   // 0x0370 (880) pixels
0x31A6, 0xF7BE, 0x39C7, 0x2965, 0x2965, 0xFFFF, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,   // 0x0380 (896) pixels
0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x4208, 0x4208, 0x4208, 0x4208,   // 0x0390 (912) pixels
0x4208, 0x4208, 0x4208, 0x4208, 0x4208, 0x4208, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,   // 0x03A0 (928) pixels
0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,   // 0x03B0 (944) pixels
0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,   // 0x03C0 (960) pixels
0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,   // 0x03D0 (976) pixels
0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,   // 0x03E0 (992) pixels
0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,   // 0x03F0 (1008) pixels
0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,   // 0x0400 (1024) pixels
};



void setup() {
  // put your setup code here, to run once:
  matrix.begin();
  matrix.fillScreen(matrix.Color333(0, 0, 0));
  matrix.setTextWrap(false); // Don't wrap at end of line - will do ourselves
 
}
int y = 0;
int x    = matrix.width();
int pass = 0;

void firstext(int x, int pass)
{
  matrix.setTextSize(2);

  matrix.fillScreen(0);
  matrix.setTextColor(matrix.Color333(7, 0, 4));
  matrix.setCursor(x, 9);
  matrix.print(F("Breon Anderson Electrical Engineering"));
  if (--x < -500) {
    x = matrix.width();
    if (++pass >= 10) pass = 4;
    //   matrix.setTextColor(colors[pass]);
  }
  delay(5);
}


void loop() {
 matrix.setTextSize(2);
  int y = 0;
delay(4000);
  while (y < 1) {
y=0;
    matrix.fillScreen(0);
    matrix.setTextColor(matrix.Color333(2, 5, 4));
    matrix.setCursor(x, 9);
    matrix.print(F("I Love you Mom and Dad "));
    if (--x < -300) {
      x = matrix.width();
      y++;
      //if (++pass >= 10) pass = 4;
      //   matrix.setTextColor(colors[pass]);
    }
    delay(40);

  }
  matrix.drawRGBBitmap(0, 0, (const uint16_t *)blm, 32, 32);
  delay(4000);
  matrix.fillScreen(0);



  for (y = 0; y < 230; y = y + 1) {

    matrix.fillScreen(0);
    matrix.setTextColor(matrix.Color333(6, 5, 4));
    matrix.setCursor(x, 9);
    matrix.print(F("I Love you Brandi "));
    if (--x < -250) {
      x = matrix.width();

      //if (++pass >= 10) pass = 4;
      //   matrix.setTextColor(colors[pass]);
    }
    delay(40);
  }

  matrix.drawRGBBitmap(0, 0, (const uint16_t *)elogo, 32, 32);
  delay(4000);
  matrix.fillScreen(0);
  y=0;








}
